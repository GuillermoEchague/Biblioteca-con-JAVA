/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Libros;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;





/**
 *
 * @author Guillermo
 */
public class ventanaP extends javax.swing.JFrame implements ActionListener{
 static Connection con  = null;
   
    /**
     * Creates new form ventanaP
     */
    public ventanaP() {
        initComponents();
        this.setLocationRelativeTo(null);
        con  = Conectar_BD.Conectar_BD.Conectar(); // paquete.clase.metodo
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jB_Clibros = new javax.swing.JButton();
        jB_Ccategoria = new javax.swing.JButton();
        tf_Edi_libro = new javax.swing.JTextField();
        tf_nom_autor = new javax.swing.JTextField();
        tf_nom_libro = new javax.swing.JTextField();
        tf_id_libro = new javax.swing.JTextField();
        tf_ej_libro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tf_nom_categoria = new javax.swing.JTextField();
        tf_id_categoria = new javax.swing.JTextField();
        tf_des_categoria = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jB_Ccategoria1 = new javax.swing.JButton();
        jB_Ccategoria2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jB_Clibros.setText("Crear Libro");
        jB_Clibros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_ClibrosActionPerformed(evt);
            }
        });

        jB_Ccategoria.setText("Crear Categorias");
        jB_Ccategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_CcategoriaActionPerformed(evt);
            }
        });

        tf_nom_autor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_nom_autorActionPerformed(evt);
            }
        });

        tf_id_libro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_id_libroActionPerformed(evt);
            }
        });

        tf_ej_libro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_ej_libroActionPerformed(evt);
            }
        });

        jLabel1.setText("ID Libro");

        jLabel2.setText("Nombre Libro");

        jLabel3.setText("Autor Libro");

        jLabel4.setText("Editorial");

        jLabel5.setText("Ejemplares");

        jLabel6.setText("ID Categoria");

        jLabel7.setText("Nombre Categoria");

        jLabel8.setText("Descripcion Categoria");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton1.setText("Eliminar Libro");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Modificar Libro");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jB_Ccategoria1.setText("Modificar Categorias");
        jB_Ccategoria1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Ccategoria1ActionPerformed(evt);
            }
        });

        jB_Ccategoria2.setText("Eliminar Categorias");
        jB_Ccategoria2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Ccategoria2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Libreria");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(54, 54, 54)
                                .addComponent(tf_id_categoria))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(28, 28, 28)
                                .addComponent(tf_nom_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tf_des_categoria))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tf_Edi_libro, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_nom_autor, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_nom_libro, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_id_libro, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_ej_libro, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jB_Clibros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jB_Ccategoria1)
                            .addComponent(jB_Ccategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jB_Ccategoria2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tf_id_libro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(tf_nom_libro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tf_nom_autor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tf_Edi_libro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_ej_libro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(81, 81, 81)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tf_id_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tf_nom_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(tf_des_categoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jB_Ccategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_Ccategoria1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jB_Ccategoria2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jB_Clibros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jB_ClibrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_ClibrosActionPerformed
        try {
            String v1 = tf_id_libro.getText();
            String v2 = tf_nom_libro.getText();
            String v3 = tf_nom_autor.getText();
            String v4 = tf_Edi_libro.getText();
            String v5 = tf_ej_libro.getText();
            Statement stqi= con.createStatement();
            stqi.executeUpdate("INSERT INTO prueba_libro.libro "
                + "(IdLibro, nombreLibro, autorLibro, editorial,ejemplares)"
                + " VALUES ('"+v1+"','"+v2+"','"+v3+"','"+v4+"','"+v5+"')");
            JOptionPane.showMessageDialog(null, "Echo !", "Libro Nuevo",
                JOptionPane.INFORMATION_MESSAGE);
            // Cierre la sentencia y la conexión.
           // stqi.close();
          //  con.close();
          //  dispose();
        } catch (SQLException ex) {
            Logger.getLogger(ventanaP.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        
        
        // Mostrar Valores en Tabla
        
        
      DefaultTableModel modelo = new DefaultTableModel(); //Creo un modelo de datos para un jtable
       //creo 4 columnas, Tipo de carne, cantidad, precio, cantidad de carbon
       // Estas son las columnas del JTable
       modelo.addColumn("IdLibro");
       modelo.addColumn("nombreLibro");
       modelo.addColumn("autorLibro");
       modelo.addColumn("editorial");
       modelo.addColumn("ejemplares");
       jTable1.setModel(modelo); //         

        try {
            Statement st = con.createStatement();
    //Recorro el ResultSet que contiene los resultados.
    try (ResultSet rs = st.executeQuery("SELECT *"
            + " FROM libro")) {
        //Recorro el ResultSet que contiene los resultados.
        while (rs.next()) {
            Object[]  ob=new Object[5];//Crea un vector
            //para almacenar los valores del ResultSet
            ob[0]=(rs.getString(1));
            ob[1]=(rs.getString(2));
            ob[2]=(rs.getString(3));
            ob[3]=(rs.getString(4));
            ob[4]=(rs.getString(5));
            
            //añado el modelo a la tabla
            modelo.addRow(ob);
        }
        
        //Cierra el ResultSet
    }
            } catch (SQLException ex) {
            Logger.getLogger(ventanaP.class.getName()).log(Level.SEVERE, null, ex);
        } 

   
        
        
        
        
    }//GEN-LAST:event_jB_ClibrosActionPerformed

    private void jB_CcategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_CcategoriaActionPerformed

        try {
            String h1 = tf_id_categoria.getText();
            String h2 = tf_nom_categoria.getText();
            String h3 = tf_des_categoria.getText();

            Statement stqi= con.createStatement();
            stqi.executeUpdate("INSERT INTO prueba_libro.categoria"
                + "(idCategoria,nombreCategoria,descripcionCategoria)"
                + " VALUES ('"+h1+"','"+h2+"','"+h3+"')");
            JOptionPane.showMessageDialog(null, "Echo !", "Categoria Nueva",
                JOptionPane.INFORMATION_MESSAGE);
            // Cierre la sentencia y la conexión.
          //  stqi.close();
          //  con.close();
          //  dispose();
        } catch (SQLException ex) {
            Logger.getLogger(ventanaP.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        
        
        
      // Mostrar Valores en Tabla
        
        
      DefaultTableModel modelo1 = new DefaultTableModel(); //Creo un modelo de datos para un jtable
       //creo 3 columnas, Tipo de carne, cantidad, precio, cantidad de carbon
       // Estas son las columnas del JTable
       modelo1.addColumn("descripcionCategoria");
       modelo1.addColumn("idCategoria");
       modelo1.addColumn("nombreCategoria");
       
       jTable2.setModel(modelo1); //         

        try {
            Statement st = con.createStatement();
    //Recorro el ResultSet que contiene los resultados.
    try (ResultSet rs = st.executeQuery("SELECT *"
            + " FROM categoria")) {
        //Recorro el ResultSet que contiene los resultados.
        while (rs.next()) {
            Object[]  ob=new Object[3];//Crea un vector
            //para almacenar los valores del ResultSet
            ob[0]=(rs.getString(1));
            ob[1]=(rs.getString(2));
            ob[2]=(rs.getString(3));
            
            
            //añado el modelo a la tabla
            modelo1.addRow(ob);
        }
        
        //Cierra el ResultSet
    }
            } catch (SQLException ex) {
            Logger.getLogger(ventanaP.class.getName()).log(Level.SEVERE, null, ex);
        } 
  
        
        
    }//GEN-LAST:event_jB_CcategoriaActionPerformed

    private void tf_nom_autorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_nom_autorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_nom_autorActionPerformed

    private void tf_id_libroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_id_libroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_id_libroActionPerformed

    private void tf_ej_libroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_ej_libroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_ej_libroActionPerformed

    private void jB_Ccategoria1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Ccategoria1ActionPerformed
    
     
      try {
            String h1 = tf_id_categoria.getText();
            String h2 = tf_nom_categoria.getText();
            String h3 = tf_des_categoria.getText();

            Statement stqi= con.createStatement();
           
             stqi.executeUpdate("UPDATE prueba_libro.categoria "+
                       "SET nombreCategoria = ('"+h2+"')"
                        + " WHERE idCategoria =('"+h1+"')");
             stqi.executeUpdate("UPDATE prueba_libro.categoria "+
                       "SET descripcionCategoria = ('"+h3+"')"
                        + " WHERE idCategoria =('"+h1+"')");
            
            
            
            
            
            // Cierre la sentencia y la conexión.
          //  stqi.close();
          //  con.close();
          //  dispose();
        } catch (SQLException ex) {
            Logger.getLogger(ventanaP.class.getName()).log(Level.SEVERE, null, ex);
        }

        
      
      
      
      
      
      
       // Mostrar Valores en Tabla
        
      
      DefaultTableModel modelo1 = new DefaultTableModel(); //Creo un modelo de datos para un jtable
       //creo 3 columnas, Tipo de carne, cantidad, precio, cantidad de carbon
       // Estas son las columnas del JTable
       modelo1.addColumn("descripcionCategoria");
       modelo1.addColumn("idCategoria");
       modelo1.addColumn("nombreCategoria");
       
       jTable2.setModel(modelo1); //         

        try {
            Statement st = con.createStatement();
    //Recorro el ResultSet que contiene los resultados.
    try (ResultSet rs = st.executeQuery("SELECT *"
            + " FROM categoria")) {
        //Recorro el ResultSet que contiene los resultados.
        while (rs.next()) {
            Object[]  ob=new Object[3];//Crea un vector
            //para almacenar los valores del ResultSet
            ob[0]=(rs.getString(1));
            ob[1]=(rs.getString(2));
            ob[2]=(rs.getString(3));
            
            
            //añado el modelo a la tabla
            modelo1.addRow(ob);
        }
        
        //Cierra el ResultSet
    }
            } catch (SQLException ex) {
            Logger.getLogger(ventanaP.class.getName()).log(Level.SEVERE, null, ex);
        } 
  
       
       
       
        
    }//GEN-LAST:event_jB_Ccategoria1ActionPerformed

    private void jB_Ccategoria2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Ccategoria2ActionPerformed
       try {
            String h1 = tf_id_categoria.getText();
            
            try (Statement stqi = con.createStatement()) {
                stqi.executeUpdate("DELETE FROM prueba_libro.categoria "
                        + " WHERE idCategoria =('"+h1+"')");
            }
           
          
          //  con.close();
          //  dispose();
        } catch (SQLException ex) {
            Logger.getLogger(ventanaP.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        // Mostrar Valores en Tabla
        
        
      DefaultTableModel modelo1 = new DefaultTableModel(); //Creo un modelo de datos para un jtable
       //creo 3 columnas, Tipo de carne, cantidad, precio, cantidad de carbon
       // Estas son las columnas del JTable
       modelo1.addColumn("descripcionCategoria");
       modelo1.addColumn("idCategoria");
       modelo1.addColumn("nombreCategoria");
       
       jTable2.setModel(modelo1); //         

        try {
            Statement st = con.createStatement();
    //Recorro el ResultSet que contiene los resultados.
    try (ResultSet rs = st.executeQuery("SELECT *"
            + " FROM categoria")) {
        //Recorro el ResultSet que contiene los resultados.
        while (rs.next()) {
            Object[]  ob=new Object[3];//Crea un vector
            //para almacenar los valores del ResultSet
            ob[0]=(rs.getString(1));
            ob[1]=(rs.getString(2));
            ob[2]=(rs.getString(3));
            
            
            //añado el modelo a la tabla
            modelo1.addRow(ob);
        }
        
        //Cierra el ResultSet
    }
            } catch (SQLException ex) {
            Logger.getLogger(ventanaP.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        
        
    }//GEN-LAST:event_jB_Ccategoria2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
       try {
            String v1 = tf_id_libro.getText();
            
            try (Statement stqi = con.createStatement()) {
                stqi.executeUpdate("DELETE FROM prueba_libro.libro "
                        + " WHERE IdLibro =('"+v1+"')");
            }
          //  con.close();
          //  dispose();
        } catch (SQLException ex) {
            Logger.getLogger(ventanaP.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        
        // Mostrar Valores en Tabla
        
        
      DefaultTableModel modelo = new DefaultTableModel(); //Creo un modelo de datos para un jtable
       //creo 4 columnas, Tipo de carne, cantidad, precio, cantidad de carbon
       // Estas son las columnas del JTable
       modelo.addColumn("IdLibro");
       modelo.addColumn("nombreLibro");
       modelo.addColumn("autorLibro");
       modelo.addColumn("editorial");
       modelo.addColumn("ejemplares");
       jTable1.setModel(modelo); //         

        try {
            Statement st = con.createStatement();
    //Recorro el ResultSet que contiene los resultados.
    try (ResultSet rs = st.executeQuery("SELECT *"
            + " FROM libro")) {
        //Recorro el ResultSet que contiene los resultados.
        while (rs.next()) {
            Object[]  ob=new Object[5];//Crea un vector
            //para almacenar los valores del ResultSet
            ob[0]=(rs.getString(1));
            ob[1]=(rs.getString(2));
            ob[2]=(rs.getString(3));
            ob[3]=(rs.getString(4));
            ob[4]=(rs.getString(5));
            
            //añado el modelo a la tabla
            modelo.addRow(ob);
        }
        
        //Cierra el ResultSet
    }
            } catch (SQLException ex) {
            Logger.getLogger(ventanaP.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
        try {
             
            String v1 = tf_id_libro.getText();
            String v2 = tf_nom_libro.getText();
            String v3 = tf_nom_autor.getText();
            String v4 = tf_Edi_libro.getText();
            String v5 = tf_ej_libro.getText();
            
            
            try (Statement stqi = con.createStatement()) {
                stqi.executeUpdate("UPDATE prueba_libro.libro "+
                       "SET ejemplares = ('"+v5+"')"
                        + " WHERE IdLibro =('"+v1+"')");
                stqi.executeUpdate("UPDATE prueba_libro.libro "+
                       "SET nombreLibro = ('"+v2+"')"
                        + " WHERE IdLibro =('"+v1+"')");
                stqi.executeUpdate("UPDATE prueba_libro.libro "+
                       "SET autorLibro = ('"+v3+"')"
                        + " WHERE IdLibro =('"+v1+"')");
                stqi.executeUpdate("UPDATE prueba_libro.libro "+
                       "SET editorial = ('"+v4+"')"
                        + " WHERE IdLibro =('"+v1+"')");
            }
          
            //stqi.executeUpdate("DELETE FROM prueba_libro.libro "
             //           + " WHERE IdLibro =('"+v1+"')");
          //  con.close();
          //  dispose();
        } catch (SQLException ex) {
            Logger.getLogger(ventanaP.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
     
        // Mostrar Valores en Tabla
        
        
      DefaultTableModel modelo = new DefaultTableModel(); //Creo un modelo de datos para un jtable
       //creo 4 columnas, Tipo de carne, cantidad, precio, cantidad de carbon
       // Estas son las columnas del JTable
       modelo.addColumn("IdLibro");
       modelo.addColumn("nombreLibro");
       modelo.addColumn("autorLibro");
       modelo.addColumn("editorial");
       modelo.addColumn("ejemplares");
       jTable1.setModel(modelo); //         

        try {
            Statement st = con.createStatement();
    //Recorro el ResultSet que contiene los resultados.
    try (ResultSet rs = st.executeQuery("SELECT *"
            + " FROM libro")) {
        //Recorro el ResultSet que contiene los resultados.
        while (rs.next()) {
            Object[]  ob=new Object[5];//Crea un vector
            //para almacenar los valores del ResultSet
            ob[0]=(rs.getString(1));
            ob[1]=(rs.getString(2));
            ob[2]=(rs.getString(3));
            ob[3]=(rs.getString(4));
            ob[4]=(rs.getString(5));
            
            //añado el modelo a la tabla
            modelo.addRow(ob);
        }
        
        //Cierra el ResultSet
    }
            } catch (SQLException ex) {
            Logger.getLogger(ventanaP.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_Ccategoria;
    private javax.swing.JButton jB_Ccategoria1;
    private javax.swing.JButton jB_Ccategoria2;
    private javax.swing.JButton jB_Clibros;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField tf_Edi_libro;
    private javax.swing.JTextField tf_des_categoria;
    private javax.swing.JTextField tf_ej_libro;
    private javax.swing.JTextField tf_id_categoria;
    private javax.swing.JTextField tf_id_libro;
    private javax.swing.JTextField tf_nom_autor;
    private javax.swing.JTextField tf_nom_categoria;
    private javax.swing.JTextField tf_nom_libro;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
       
    
    }
}
